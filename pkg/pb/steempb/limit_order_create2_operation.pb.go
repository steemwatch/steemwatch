// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: limit_order_create2_operation.proto

package steempb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type LimitOrderCreate2Operation struct {
	Owner        string                      `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	OrderID      uint32                      `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	AmountToSell string                      `protobuf:"bytes,3,opt,name=amount_to_sell,json=amountToSell,proto3" json:"amount_to_sell,omitempty"`
	FillOrKill   bool                        `protobuf:"varint,4,opt,name=fill_or_kill,json=fillOrKill,proto3" json:"fill_or_kill,omitempty"`
	ExchangeRate *Price                      `protobuf:"bytes,5,opt,name=exchange_rate,json=exchangeRate" json:"exchange_rate,omitempty"`
	Expiration   *google_protobuf1.Timestamp `protobuf:"bytes,6,opt,name=expiration" json:"expiration,omitempty"`
}

func (m *LimitOrderCreate2Operation) Reset()         { *m = LimitOrderCreate2Operation{} }
func (m *LimitOrderCreate2Operation) String() string { return proto.CompactTextString(m) }
func (*LimitOrderCreate2Operation) ProtoMessage()    {}
func (*LimitOrderCreate2Operation) Descriptor() ([]byte, []int) {
	return fileDescriptorLimitOrderCreate2Operation, []int{0}
}

func (m *LimitOrderCreate2Operation) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *LimitOrderCreate2Operation) GetOrderID() uint32 {
	if m != nil {
		return m.OrderID
	}
	return 0
}

func (m *LimitOrderCreate2Operation) GetAmountToSell() string {
	if m != nil {
		return m.AmountToSell
	}
	return ""
}

func (m *LimitOrderCreate2Operation) GetFillOrKill() bool {
	if m != nil {
		return m.FillOrKill
	}
	return false
}

func (m *LimitOrderCreate2Operation) GetExchangeRate() *Price {
	if m != nil {
		return m.ExchangeRate
	}
	return nil
}

func (m *LimitOrderCreate2Operation) GetExpiration() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Expiration
	}
	return nil
}

func init() {
	proto.RegisterType((*LimitOrderCreate2Operation)(nil), "steemwatch.steem.LimitOrderCreate2Operation")
}

func init() {
	proto.RegisterFile("limit_order_create2_operation.proto", fileDescriptorLimitOrderCreate2Operation)
}

var fileDescriptorLimitOrderCreate2Operation = []byte{
	// 324 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x49, 0xb5, 0xff, 0xb6, 0xad, 0x48, 0x10, 0x0c, 0xb9, 0x34, 0xa8, 0x48, 0x2e, 0x6e,
	0xa1, 0xde, 0xc4, 0x53, 0xf5, 0x52, 0x14, 0x2a, 0xb1, 0x27, 0x2f, 0xcb, 0x26, 0x9d, 0xa6, 0x8b,
	0x9b, 0x4c, 0xd8, 0x4e, 0x69, 0x3f, 0x8c, 0x9f, 0xcd, 0x83, 0x9f, 0x44, 0xb2, 0x6b, 0x50, 0xbc,
	0xcd, 0x9b, 0xfd, 0xed, 0xe3, 0xcd, 0x63, 0x97, 0x5a, 0x15, 0x8a, 0x04, 0x9a, 0x15, 0x18, 0x91,
	0x19, 0x90, 0x04, 0x53, 0x81, 0x15, 0x18, 0x49, 0x0a, 0x4b, 0x5e, 0x19, 0x24, 0xf4, 0x4f, 0xb7,
	0x04, 0x50, 0xec, 0x25, 0x65, 0x1b, 0x6e, 0xc7, 0xf0, 0x26, 0x57, 0xb4, 0xd9, 0xa5, 0x3c, 0xc3,
	0x62, 0x92, 0x63, 0x8e, 0x13, 0x0b, 0xa6, 0xbb, 0xb5, 0x55, 0x56, 0xd8, 0xc9, 0x19, 0x84, 0xe3,
	0x1c, 0x31, 0xd7, 0xf0, 0x4b, 0x91, 0x2a, 0x60, 0x4b, 0xb2, 0xa8, 0x7e, 0x80, 0x41, 0x65, 0x54,
	0x06, 0x4e, 0x5c, 0x7c, 0xb4, 0x58, 0xf8, 0x5c, 0xc7, 0x5a, 0xd4, 0xa9, 0x1e, 0x5c, 0xa8, 0x45,
	0x93, 0xc9, 0x3f, 0x63, 0x6d, 0xdc, 0x97, 0x60, 0x02, 0x2f, 0xf2, 0xe2, 0x7e, 0xe2, 0x84, 0x7f,
	0xcd, 0x7a, 0xee, 0x08, 0xb5, 0x0a, 0x5a, 0x91, 0x17, 0x8f, 0x66, 0x83, 0xaf, 0xcf, 0x71, 0xd7,
	0x5a, 0xcc, 0x1f, 0x93, 0xae, 0x7d, 0x9c, 0xaf, 0xfc, 0x2b, 0x76, 0x22, 0x0b, 0xdc, 0x95, 0x24,
	0x08, 0xc5, 0x16, 0xb4, 0x0e, 0x8e, 0xac, 0xcd, 0xd0, 0x6d, 0x97, 0xf8, 0x0a, 0x5a, 0xfb, 0x11,
	0x1b, 0xae, 0x95, 0xd6, 0x02, 0x8d, 0x78, 0x57, 0x5a, 0x07, 0xc7, 0x91, 0x17, 0xf7, 0x12, 0x56,
	0xef, 0x16, 0xe6, 0x49, 0x69, 0xed, 0xdf, 0xb3, 0x11, 0x1c, 0xb2, 0x8d, 0x2c, 0x73, 0x10, 0x46,
	0x12, 0x04, 0xed, 0xc8, 0x8b, 0x07, 0xd3, 0x73, 0xfe, 0xbf, 0x2b, 0xfe, 0x52, 0x9f, 0x96, 0x0c,
	0x1b, 0x3a, 0x91, 0x04, 0xfe, 0x1d, 0x63, 0x70, 0xa8, 0x94, 0xbb, 0x28, 0xe8, 0xd8, 0xaf, 0x21,
	0x77, 0x2d, 0xf1, 0xa6, 0x25, 0xbe, 0x6c, 0x5a, 0x4a, 0xfe, 0xd0, 0xb3, 0xfe, 0x5b, 0xd7, 0x1a,
	0x57, 0x69, 0xda, 0xb1, 0xe8, 0xed, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe8, 0xfd, 0xbf, 0xe7,
	0xc6, 0x01, 0x00, 0x00,
}
