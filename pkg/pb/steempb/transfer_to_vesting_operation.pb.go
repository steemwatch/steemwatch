// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: transfer_to_vesting_operation.proto

package steempb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TransferToVestingOperation struct {
	From   string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To     string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Amount string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (m *TransferToVestingOperation) Reset()         { *m = TransferToVestingOperation{} }
func (m *TransferToVestingOperation) String() string { return proto.CompactTextString(m) }
func (*TransferToVestingOperation) ProtoMessage()    {}
func (*TransferToVestingOperation) Descriptor() ([]byte, []int) {
	return fileDescriptorTransferToVestingOperation, []int{0}
}

func (m *TransferToVestingOperation) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *TransferToVestingOperation) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *TransferToVestingOperation) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func init() {
	proto.RegisterType((*TransferToVestingOperation)(nil), "steemwatch.steem.TransferToVestingOperation")
}

func init() {
	proto.RegisterFile("transfer_to_vesting_operation.proto", fileDescriptorTransferToVestingOperation)
}

var fileDescriptorTransferToVestingOperation = []byte{
	// 149 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x2e, 0x29, 0x4a, 0xcc,
	0x2b, 0x4e, 0x4b, 0x2d, 0x8a, 0x2f, 0xc9, 0x8f, 0x2f, 0x4b, 0x2d, 0x2e, 0xc9, 0xcc, 0x4b, 0x8f,
	0xcf, 0x2f, 0x48, 0x2d, 0x4a, 0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x12, 0x28, 0x2e, 0x49, 0x4d, 0xcd, 0x2d, 0x4f, 0x2c, 0x49, 0xce, 0xd0, 0x03, 0x33, 0x95, 0x22,
	0xb8, 0xa4, 0x42, 0xa0, 0x1a, 0x43, 0xf2, 0xc3, 0x20, 0xda, 0xfc, 0x61, 0xba, 0x84, 0x84, 0xb8,
	0x58, 0xd2, 0x8a, 0xf2, 0x73, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x21, 0x3e,
	0x2e, 0xa6, 0x92, 0x7c, 0x09, 0x26, 0xb0, 0x08, 0x53, 0x49, 0xbe, 0x90, 0x18, 0x17, 0x5b, 0x62,
	0x6e, 0x7e, 0x69, 0x5e, 0x89, 0x04, 0x33, 0x58, 0x0c, 0xca, 0x73, 0xe2, 0x8c, 0x62, 0x07, 0x5b,
	0x51, 0x90, 0x94, 0xc4, 0x06, 0xb6, 0xdd, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x3f, 0xa2, 0xee,
	0x1f, 0xa4, 0x00, 0x00, 0x00,
}
