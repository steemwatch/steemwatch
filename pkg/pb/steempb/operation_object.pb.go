// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: operation_object.proto

package steempb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type OperationObject struct {
	BlockNumber            uint32                      `protobuf:"varint,1,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	TransactionID          string                      `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	TransactionInBlock     uint32                      `protobuf:"varint,3,opt,name=transaction_in_block,json=transactionInBlock,proto3" json:"transaction_in_block,omitempty"`
	Operation              *Operation                  `protobuf:"bytes,4,opt,name=operation" json:"operation,omitempty"`
	OperationInTransaction uint32                      `protobuf:"varint,5,opt,name=operation_in_transaction,json=operationInTransaction,proto3" json:"operation_in_transaction,omitempty"`
	VirtualOperation       uint64                      `protobuf:"varint,6,opt,name=virtual_operation,json=virtualOperation,proto3" json:"virtual_operation,omitempty"`
	Timestamp              *google_protobuf1.Timestamp `protobuf:"bytes,7,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *OperationObject) Reset()                    { *m = OperationObject{} }
func (m *OperationObject) String() string            { return proto.CompactTextString(m) }
func (*OperationObject) ProtoMessage()               {}
func (*OperationObject) Descriptor() ([]byte, []int) { return fileDescriptorOperationObject, []int{0} }

func (m *OperationObject) GetBlockNumber() uint32 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}

func (m *OperationObject) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

func (m *OperationObject) GetTransactionInBlock() uint32 {
	if m != nil {
		return m.TransactionInBlock
	}
	return 0
}

func (m *OperationObject) GetOperation() *Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

func (m *OperationObject) GetOperationInTransaction() uint32 {
	if m != nil {
		return m.OperationInTransaction
	}
	return 0
}

func (m *OperationObject) GetVirtualOperation() uint64 {
	if m != nil {
		return m.VirtualOperation
	}
	return 0
}

func (m *OperationObject) GetTimestamp() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func init() {
	proto.RegisterType((*OperationObject)(nil), "steemwatch.steem.OperationObject")
}

func init() { proto.RegisterFile("operation_object.proto", fileDescriptorOperationObject) }

var fileDescriptorOperationObject = []byte{
	// 316 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x95, 0x52, 0x5a, 0xc5, 0xa5, 0xb4, 0xb5, 0x10, 0xb2, 0xca, 0xd0, 0xc0, 0x14, 0x09,
	0xe1, 0x22, 0x58, 0xca, 0x5a, 0xb1, 0x74, 0x21, 0x52, 0xd4, 0x89, 0x25, 0xb2, 0x53, 0x93, 0x1a,
	0x12, 0x3b, 0x4a, 0x1c, 0xf8, 0xb7, 0x0c, 0xfc, 0x0e, 0x06, 0xc4, 0xa5, 0x89, 0x03, 0x9b, 0xfd,
	0xee, 0xf3, 0xbd, 0xe7, 0x3b, 0x74, 0xae, 0x73, 0x51, 0x30, 0x23, 0xb5, 0x8a, 0x34, 0x7f, 0x15,
	0xb1, 0xa1, 0x79, 0xa1, 0x8d, 0xc6, 0xd3, 0xd2, 0x08, 0x91, 0x7d, 0x30, 0x13, 0xef, 0x29, 0x1c,
	0xe7, 0x37, 0x89, 0x34, 0xfb, 0x8a, 0xd3, 0x58, 0x67, 0xcb, 0x44, 0x27, 0x7a, 0x09, 0x20, 0xaf,
	0x5e, 0xe0, 0x06, 0x17, 0x38, 0xd5, 0x0d, 0xe6, 0x8b, 0x44, 0xeb, 0x24, 0x15, 0x96, 0x32, 0x32,
	0x13, 0xa5, 0x61, 0x59, 0x7e, 0x00, 0x26, 0xad, 0x73, 0x2d, 0x5c, 0x7d, 0xf7, 0xd0, 0x24, 0x68,
	0xb4, 0x00, 0xc2, 0xe0, 0x4b, 0x74, 0xc2, 0x53, 0x1d, 0xbf, 0x45, 0xaa, 0xca, 0xb8, 0x28, 0x88,
	0xe3, 0x39, 0xfe, 0x38, 0x1c, 0x81, 0xf6, 0x04, 0x12, 0x5e, 0xa1, 0x53, 0x53, 0x30, 0x55, 0xb2,
	0x18, 0x7e, 0x21, 0x77, 0xa4, 0xe7, 0x39, 0xbe, 0xbb, 0x9e, 0x7d, 0x7d, 0x2e, 0xc6, 0x5b, 0x5b,
	0xd9, 0x3c, 0x86, 0xe3, 0x0e, 0xb8, 0xd9, 0xe1, 0x5b, 0x74, 0xf6, 0xe7, 0xa5, 0x8a, 0xa0, 0x2f,
	0x39, 0x02, 0x13, 0xdc, 0x85, 0xd5, 0xfa, 0xb7, 0x82, 0x1f, 0x90, 0xdb, 0xa6, 0x26, 0x7d, 0xcf,
	0xf1, 0x47, 0x77, 0x17, 0xf4, 0xff, 0xa4, 0x68, 0xfb, 0x89, 0xd0, 0xd2, 0x78, 0x85, 0x88, 0x1d,
	0xb5, 0x54, 0x51, 0xa7, 0x3b, 0x39, 0x06, 0x43, 0xbb, 0x8a, 0x8d, 0xea, 0xe4, 0xc6, 0xd7, 0x68,
	0xf6, 0x2e, 0x0b, 0x53, 0xb1, 0x34, 0xb2, 0xe6, 0x03, 0xcf, 0xf1, 0xfb, 0xe1, 0xf4, 0x50, 0x08,
	0x3a, 0x36, 0x6e, 0x3b, 0x68, 0x32, 0x84, 0x84, 0x73, 0x5a, 0xaf, 0x82, 0x36, 0xab, 0xa0, 0xdb,
	0x86, 0x08, 0x2d, 0xbc, 0x76, 0x9f, 0x87, 0x10, 0x3f, 0xe7, 0x7c, 0x00, 0xe4, 0xfd, 0x4f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x5b, 0xb2, 0x57, 0x33, 0x1d, 0x02, 0x00, 0x00,
}
